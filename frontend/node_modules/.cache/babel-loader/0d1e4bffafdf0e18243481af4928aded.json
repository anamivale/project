{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\frontend\\\\src\\\\Admin.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport GraphQLFetch from \"./Helpers/GraphQLFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Admin() {\n  _s();\n\n  const [candidates, setCandidates] = useState([]);\n  const [schools, setSchools] = useState([]);\n  const [students, setStudents] = useState([]);\n  useEffect(() => {\n    loadCandidates();\n    loadSchools();\n  }, []);\n\n  async function loadCandidates() {\n    let {\n      data,\n      errors\n    } = await GraphQLFetch(`{\n      candidates{\n        name\n        reg_no\n      }\n    }`);\n\n    if (data) {\n      setCandidates(data.candidates);\n    }\n  }\n\n  async function loadSchools() {\n    let {\n      data,\n      errors\n    } = await GraphQLFetch(`{\n      schools{\n        name\n        code\n      }\n    }`);\n\n    if (data) {\n      setSchools(data.schools);\n    }\n  }\n\n  async function loadStudents() {\n    let {\n      data,\n      errors\n    } = await GraphQLFetch(`{\n      students{\n        name\n        reg_no\n      }\n    }`);\n\n    if (data) {\n      setStudents(data.student);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-dash\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dash-item\",\n        title: candidates.map(c => c.name),\n        children: [\"Candidates \", candidates.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dash-item\",\n        children: \"Students\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dash-item\",\n        title: schools.map(s => `${s.name} (${s.code})`),\n        children: [\"Schools \", schools.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Admin, \"PhjTwFOjl1/02UiIiPscST+r6Uw=\");\n\n_c = Admin;\nexport default Admin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"sources":["E:/project/frontend/src/Admin.jsx"],"names":["React","useState","useEffect","GraphQLFetch","Admin","candidates","setCandidates","schools","setSchools","students","setStudents","loadCandidates","loadSchools","data","errors","loadStudents","student","map","c","name","length","s","code"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,wBAAzB;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,cAAc;AACdC,IAAAA,WAAW;AACZ,GAHQ,EAGN,EAHM,CAAT;;AAKA,iBAAeD,cAAf,GAAgC;AAC9B,QAAI;AAAEE,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmB,MAAMX,YAAY,CAAE;AAC/C;AACA;AACA;AACA;AACA,MAL6C,CAAzC;;AAMA,QAAIU,IAAJ,EAAU;AACRP,MAAAA,aAAa,CAACO,IAAI,CAACR,UAAN,CAAb;AACD;AACF;;AAED,iBAAeO,WAAf,GAA6B;AAC3B,QAAI;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmB,MAAMX,YAAY,CAAE;AAC/C;AACA;AACA;AACA;AACA,MAL6C,CAAzC;;AAMA,QAAIU,IAAJ,EAAU;AACRL,MAAAA,UAAU,CAACK,IAAI,CAACN,OAAN,CAAV;AACD;AACF;;AAED,iBAAeQ,YAAf,GAA8B;AAC5B,QAAI;AAAEF,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmB,MAAMX,YAAY,CAAE;AAC/C;AACA;AACA;AACA;AACA,MAL6C,CAAzC;;AAMA,QAAIU,IAAJ,EAAU;AACRH,MAAAA,WAAW,CAACG,IAAI,CAACG,OAAN,CAAX;AACD;AACF;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,KAAK,EAAEX,UAAU,CAACY,GAAX,CAAgBC,CAAD,IAAOA,CAAC,CAACC,IAAxB,CAAlC;AAAA,kCACcd,UAAU,CAACe,MADzB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AACE,QAAA,SAAS,EAAC,WADZ;AAEE,QAAA,KAAK,EAAEb,OAAO,CAACU,GAAR,CAAaI,CAAD,IAAQ,GAAEA,CAAC,CAACF,IAAK,KAAIE,CAAC,CAACC,IAAK,GAAxC,CAFT;AAAA,+BAIWf,OAAO,CAACa,MAJnB;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA9DQhB,K;;KAAAA,K;AAgET,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport GraphQLFetch from \"./Helpers/GraphQLFetch\"\r\n\r\nfunction Admin() {\r\n  const [candidates, setCandidates] = useState([])\r\n  const [schools, setSchools] = useState([])\r\n  const [students, setStudents] = useState([])\r\n\r\n  useEffect(() => {\r\n    loadCandidates()\r\n    loadSchools()\r\n  }, [])\r\n\r\n  async function loadCandidates() {\r\n    let { data, errors } = await GraphQLFetch(`{\r\n      candidates{\r\n        name\r\n        reg_no\r\n      }\r\n    }`)\r\n    if (data) {\r\n      setCandidates(data.candidates)\r\n    }\r\n  }\r\n\r\n  async function loadSchools() {\r\n    let { data, errors } = await GraphQLFetch(`{\r\n      schools{\r\n        name\r\n        code\r\n      }\r\n    }`)\r\n    if (data) {\r\n      setSchools(data.schools)\r\n    }\r\n  }\r\n\r\n  async function loadStudents() {\r\n    let { data, errors } = await GraphQLFetch(`{\r\n      students{\r\n        name\r\n        reg_no\r\n      }\r\n    }`)\r\n    if (data) {\r\n      setStudents(data.student)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"admin\">\r\n      <div className=\"top-dash\">\r\n        <div className=\"dash-item\" title={candidates.map((c) => c.name)}>\r\n          Candidates {candidates.length}\r\n        </div>\r\n        <div className=\"dash-item\">Students</div>\r\n        <div\r\n          className=\"dash-item\"\r\n          title={schools.map((s) => `${s.name} (${s.code})`)}\r\n        >\r\n          Schools {schools.length}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Admin\r\n"]},"metadata":{},"sourceType":"module"}