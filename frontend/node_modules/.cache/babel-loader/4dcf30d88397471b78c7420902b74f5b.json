{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\frontend\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./App.scss\";\nimport { useState, useEffect } from \"react\";\nimport Login from \"./Pages/Login\";\nimport { gql, useApolloClient } from \"@apollo/client\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [auth, setAuth] = useState({\n    error: \"\",\n    data: {},\n    loading: false\n  });\n  const client = useApolloClient();\n  const AUTHEDSTD = gql`\n  {\n    loggedInStudent(token: \"${localStorage.getItem(\"school-token\")}\"){\n      student{\n        name\n        reg_no\n        school{\n          name\n          code\n        }\n      }\n    }\n  }\n`;\n\n  async function loadAuth() {\n    try {\n      const austd = await client.query({\n        query: AUTHEDSTD // variables: { reg_no: stdEmail,  },\n\n      });\n      setAuth(austd.data.studentLogin);\n      console.log(austd);\n    } catch (er) {\n      setAuth({\n        error: er\n      });\n    }\n  }\n\n  useEffect(() => {\n    loadAuth();\n  }, []);\n  return auth.loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Loading...\"\n  }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: auth.error ? /*#__PURE__*/_jsxDEV(Login, {\n      reloadAuth: () => loadAuth()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Welcome\"\n    }, void 0, false)\n  }, void 0, false);\n}\n\n_s(App, \"yDxY57Luk1lAdV2DndjbZ3eDfV8=\", false, function () {\n  return [useApolloClient];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/project/frontend/src/App.jsx"],"names":["useState","useEffect","Login","gql","useApolloClient","App","auth","setAuth","error","data","loading","client","AUTHEDSTD","localStorage","getItem","loadAuth","austd","query","studentLogin","console","log","er"],"mappings":";;;AAAA,OAAO,YAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,GAAT,EAAcC,eAAd,QAAqC,gBAArC;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC;AAAEQ,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,IAAI,EAAE,EAAnB;AAAuBC,IAAAA,OAAO,EAAE;AAAhC,GAAD,CAAhC;AACA,QAAMC,MAAM,GAAGP,eAAe,EAA9B;AACA,QAAMQ,SAAS,GAAGT,GAAI;AACxB;AACA,8BAA8BU,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAqC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbE;;AAeA,iBAAeC,QAAf,GAA0B;AACxB,QAAI;AACF,YAAMC,KAAK,GAAG,MAAML,MAAM,CAACM,KAAP,CAAa;AAC/BA,QAAAA,KAAK,EAAEL,SADwB,CAE/B;;AAF+B,OAAb,CAApB;AAIAL,MAAAA,OAAO,CAACS,KAAK,CAACP,IAAN,CAAWS,YAAZ,CAAP;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACD,KAPD,CAOE,OAAOK,EAAP,EAAW;AACXd,MAAAA,OAAO,CAAC;AAAEC,QAAAA,KAAK,EAAEa;AAAT,OAAD,CAAP;AACD;AACF;;AAEDpB,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAOT,IAAI,CAACI,OAAL,gBACL;AAAA;AAAA,mBADK,gBAGL;AAAA,cAAGJ,IAAI,CAACE,KAAL,gBAAa,QAAC,KAAD;AAAO,MAAA,UAAU,EAAE,MAAMO,QAAQ;AAAjC;AAAA;AAAA;AAAA;AAAA,YAAb,gBAAuD;AAAA;AAAA;AAA1D,mBAHF;AAKD;;GAxCQV,G;UAEQD,e;;;KAFRC,G;AA0CT,eAAeA,GAAf","sourcesContent":["import \"./App.scss\"\nimport { useState, useEffect } from \"react\"\nimport Login from \"./Pages/Login\"\nimport { gql, useApolloClient } from \"@apollo/client\"\n\nfunction App() {\n  const [auth, setAuth] = useState({ error: \"\", data: {}, loading: false })\n  const client = useApolloClient()\n  const AUTHEDSTD = gql`\n  {\n    loggedInStudent(token: \"${localStorage.getItem(\"school-token\")}\"){\n      student{\n        name\n        reg_no\n        school{\n          name\n          code\n        }\n      }\n    }\n  }\n`\n\n  async function loadAuth() {\n    try {\n      const austd = await client.query({\n        query: AUTHEDSTD,\n        // variables: { reg_no: stdEmail,  },\n      })\n      setAuth(austd.data.studentLogin)\n      console.log(austd)\n    } catch (er) {\n      setAuth({ error: er })\n    }\n  }\n\n  useEffect(() => {\n    loadAuth()\n  }, [])\n\n  return auth.loading ? (\n    <>Loading...</>\n  ) : (\n    <>{auth.error ? <Login reloadAuth={() => loadAuth()} /> : <>Welcome</>}</>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}