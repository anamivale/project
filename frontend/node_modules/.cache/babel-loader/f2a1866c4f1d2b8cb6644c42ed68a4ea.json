{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\frontend\\\\src\\\\Pages\\\\Student.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport GraphQLFetch from \"../Helpers/GraphQLFetch\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck, faVoteYea } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Student(props) {\n  _s();\n\n  const [selectedCandidate, setSelectedCandidate] = useState(null);\n  const [myInfo, setMyInfo] = useState({\n    name: \"\",\n    reg_no: \"\",\n    school: {\n      name: \"\",\n      code: \"\"\n    }\n  });\n  const [candidates, setCandidates] = useState([]);\n  useEffect(() => {\n    if (props.reg_no) {\n      fetchMyInfo();\n    }\n  }, []);\n\n  async function fetchMyInfo() {\n    let res = await GraphQLFetch(`{\n          myInfo(reg_no: \"${props.reg_no}\"){\n            name\n            reg_no\n            school{\n              name\n              code\n            }\n          }\n        }`);\n    fetchCandidates(res.data.myInfo.school.code);\n    setMyInfo(res.data.myInfo);\n  }\n\n  async function fetchCandidates(code) {\n    let {\n      data\n    } = await GraphQLFetch(`{\n      schoolCandidates(school: \"${code}\"){\n        reg_no\n        name\n        voteCount\n      }\n    }`);\n    setCandidates(data.schoolCandidates);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"Student's Page \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-school\",\n      children: [myInfo.school.name, \" (\", myInfo.school.code.toUpperCase(), \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-candidates\",\n      children: candidates.length > 0 ? candidates.map(s => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"s-candidate\",\n        onClick: e => {\n          let cdivs = document.querySelectorAll(\".my-candidates > .s-candidate\");\n\n          for (let c of cdivs) {\n            c.classList.remove(\"csel\");\n          }\n\n          e.target.classList.add(\"csel\");\n          setSelectedCandidate(s);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            pointerEvents: \"none\"\n          },\n          children: s.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"c-check\",\n          style: {\n            pointerEvents: \"none\"\n          },\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck,\n            size: \"5x\",\n            style: {\n              pointerEvents: \"none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)]\n      }, `s-cand-${s.reg_no}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: \"No Candidates Available!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"c-options\",\n      style: {\n        display: selectedCandidate ? \"flex\" : \"none\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cast\",\n        onClick: async () => {\n          let sureVote = window.confirm(`Are you sure you want to vote for ${selectedCandidate.name.toUpperCase()}`);\n\n          if (sureVote) {\n            let {\n              errors,\n              data\n            } = await GraphQLFetch(`mutation{\n                castVote(reg_no: \"${props.reg_no}\", candidate: \"${selectedCandidate.reg_no}\"){\n                  voter{\n                    name\n                    reg_no\n                  }\n                  candidate{\n                    name\n                    reg_no\n                  }\n                }\n              }`);\n\n            if (errors) {\n              alert(`There was an error while casting your vote\n                \n                ERRORS\n                ${errors.map(e => ` - ${e.message}\\n`)}\n                `);\n            } else {\n              document.querySelector(\".c-options button\").setAttribute(\"disabled\", true);\n              let cands = document.querySelectorAll(\".s-candidate\");\n\n              for (let c of cands) {\n                c.style.pointerEvents = \"none\";\n                c.style.opacity = 0.6;\n              }\n\n              alert(\"Vote Casted Successfully\");\n            }\n          } else {\n            alert(\"Please select another Candidate\");\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faVoteYea\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), \"Cast Vote\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Student, \"3a+PMa9SgtG3ucfVmhPolSckNa4=\");\n\n_c = Student;\nexport default Student;\n\nvar _c;\n\n$RefreshReg$(_c, \"Student\");","map":{"version":3,"sources":["E:/project/frontend/src/Pages/Student.jsx"],"names":["React","useState","useEffect","GraphQLFetch","FontAwesomeIcon","faCheck","faVoteYea","Student","props","selectedCandidate","setSelectedCandidate","myInfo","setMyInfo","name","reg_no","school","code","candidates","setCandidates","fetchMyInfo","res","fetchCandidates","data","schoolCandidates","toUpperCase","length","map","s","e","cdivs","document","querySelectorAll","c","classList","remove","target","add","pointerEvents","display","sureVote","window","confirm","errors","alert","message","querySelector","setAttribute","cands","style","opacity"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport GraphQLFetch from \"../Helpers/GraphQLFetch\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faCheck, faVoteYea } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nfunction Student(props) {\r\n  const [selectedCandidate, setSelectedCandidate] = useState(null)\r\n  const [myInfo, setMyInfo] = useState({\r\n    name: \"\",\r\n    reg_no: \"\",\r\n    school: {\r\n      name: \"\",\r\n      code: \"\",\r\n    },\r\n  })\r\n  const [candidates, setCandidates] = useState([])\r\n\r\n  useEffect(() => {\r\n    if (props.reg_no) {\r\n      fetchMyInfo()\r\n    }\r\n  }, [])\r\n\r\n  async function fetchMyInfo() {\r\n    let res = await GraphQLFetch(`{\r\n          myInfo(reg_no: \"${props.reg_no}\"){\r\n            name\r\n            reg_no\r\n            school{\r\n              name\r\n              code\r\n            }\r\n          }\r\n        }`)\r\n    fetchCandidates(res.data.myInfo.school.code)\r\n    setMyInfo(res.data.myInfo)\r\n  }\r\n\r\n  async function fetchCandidates(code) {\r\n    let { data } = await GraphQLFetch(`{\r\n      schoolCandidates(school: \"${code}\"){\r\n        reg_no\r\n        name\r\n        voteCount\r\n      }\r\n    }`)\r\n    setCandidates(data.schoolCandidates)\r\n  }\r\n  return (\r\n    <div className=\"student\">\r\n      <div className=\"title\">Student's Page </div>\r\n      <div className=\"my-school\">\r\n        {myInfo.school.name} ({myInfo.school.code.toUpperCase()})\r\n      </div>\r\n      <div className=\"my-candidates\">\r\n        {candidates.length > 0 ? (\r\n          candidates.map((s) => (\r\n            <div\r\n              key={`s-cand-${s.reg_no}`}\r\n              className=\"s-candidate\"\r\n              onClick={(e) => {\r\n                let cdivs = document.querySelectorAll(\r\n                  \".my-candidates > .s-candidate\"\r\n                )\r\n                for (let c of cdivs) {\r\n                  c.classList.remove(\"csel\")\r\n                }\r\n                e.target.classList.add(\"csel\")\r\n                setSelectedCandidate(s)\r\n              }}\r\n            >\r\n              <span style={{ pointerEvents: \"none\" }}>{s.name}</span>\r\n              <div className=\"c-check\" style={{ pointerEvents: \"none\" }}>\r\n                <FontAwesomeIcon\r\n                  icon={faCheck}\r\n                  size=\"5x\"\r\n                  style={{ pointerEvents: \"none\" }}\r\n                />\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div className=\"message\">No Candidates Available!</div>\r\n        )}\r\n      </div>\r\n      <div\r\n        className=\"c-options\"\r\n        style={{ display: selectedCandidate ? \"flex\" : \"none\" }}\r\n      >\r\n        <button\r\n          className=\"cast\"\r\n          onClick={async () => {\r\n            let sureVote = window.confirm(\r\n              `Are you sure you want to vote for ${selectedCandidate.name.toUpperCase()}`\r\n            )\r\n            if (sureVote) {\r\n              let { errors, data } = await GraphQLFetch(`mutation{\r\n                castVote(reg_no: \"${props.reg_no}\", candidate: \"${selectedCandidate.reg_no}\"){\r\n                  voter{\r\n                    name\r\n                    reg_no\r\n                  }\r\n                  candidate{\r\n                    name\r\n                    reg_no\r\n                  }\r\n                }\r\n              }`)\r\n              if (errors) {\r\n                alert(`There was an error while casting your vote\r\n                \r\n                ERRORS\r\n                ${errors.map((e) => ` - ${e.message}\\n`)}\r\n                `)\r\n              } else {\r\n                document\r\n                  .querySelector(\".c-options button\")\r\n                  .setAttribute(\"disabled\", true)\r\n\r\n                let cands = document.querySelectorAll(\".s-candidate\")\r\n                for (let c of cands) {\r\n                  c.style.pointerEvents = \"none\"\r\n                  c.style.opacity = 0.6\r\n                }\r\n                alert(\"Vote Casted Successfully\")\r\n              }\r\n            } else {\r\n              alert(\"Please select another Candidate\")\r\n            }\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faVoteYea} />\r\n          Cast Vote\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Student\r\n"]},"metadata":{},"sourceType":"module"}