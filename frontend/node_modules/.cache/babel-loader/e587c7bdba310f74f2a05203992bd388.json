{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\frontend\\\\src\\\\Admin.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport GraphQLFetch from \"./Helpers/GraphQLFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Admin() {\n  _s();\n\n  const [candidates, setCandidates] = useState([]);\n  useEffect(() => {}, []);\n\n  async function loadCandidates() {\n    let {\n      data,\n      errors\n    } = await GraphQLFetch(`{\n      candidates{\n        name\n        reg_no\n      }\n    }`);\n\n    if (data) {\n      setCandidates(data.candidates);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-dash\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dash-item\",\n        children: [\"Candidates \", candidates.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dash-item\",\n        children: \"Students\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dash-item\",\n        children: \"Schools\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Admin, \"W8xvQL2/gnd29ogq8r5xz5rSiCY=\");\n\n_c = Admin;\nexport default Admin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"sources":["E:/project/frontend/src/Admin.jsx"],"names":["React","useState","useEffect","GraphQLFetch","Admin","candidates","setCandidates","loadCandidates","data","errors","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,wBAAzB;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,EAAX,CAAT;;AAEA,iBAAeK,cAAf,GAAgC;AAC9B,QAAI;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmB,MAAMN,YAAY,CAAE;AAC/C;AACA;AACA;AACA;AACA,MAL6C,CAAzC;;AAMA,QAAIK,IAAJ,EAAU;AACRF,MAAAA,aAAa,CAACE,IAAI,CAACH,UAAN,CAAb;AACD;AACF;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kCAAuCA,UAAU,CAACK,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAzBQN,K;;KAAAA,K;AA2BT,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport GraphQLFetch from \"./Helpers/GraphQLFetch\"\r\n\r\nfunction Admin() {\r\n  const [candidates, setCandidates] = useState([])\r\n\r\n  useEffect(() => {}, [])\r\n\r\n  async function loadCandidates() {\r\n    let { data, errors } = await GraphQLFetch(`{\r\n      candidates{\r\n        name\r\n        reg_no\r\n      }\r\n    }`)\r\n    if (data) {\r\n      setCandidates(data.candidates)\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"admin\">\r\n      <div className=\"top-dash\">\r\n        <div className=\"dash-item\">Candidates {candidates.length}</div>\r\n        <div className=\"dash-item\">Students</div>\r\n        <div className=\"dash-item\">Schools</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Admin\r\n"]},"metadata":{},"sourceType":"module"}