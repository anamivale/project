{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\frontend\\\\src\\\\Pages\\\\Student.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport GraphQLFetch from \"../Helpers/GraphQLFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Student(props) {\n  _s();\n\n  const [myInfo, setMyInfo] = useState({\n    name: \"\",\n    reg_no: props.reg_no,\n    school: {\n      name: \"\",\n      code: \"\"\n    }\n  });\n  useEffect(() => {\n    fetchMyInfo();\n  }, []);\n\n  async function fetchMyInfo() {\n    let res = await GraphQLFetch(`{\n          myInfo(reg_no: \"${props.reg_no}\"){\n            name\n            reg_no\n            school{\n              name\n              code\n            }\n          }\n        }`);\n    console.log(res.data.myInfo); // setMyInfo(res.data.myInfo)\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"Student's Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-school\",\n      children: myInfo.school.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-candidates\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Student, \"jEwHc1JKISBCxS76d5ZpffAkV2o=\");\n\n_c = Student;\nexport default Student;\n\nvar _c;\n\n$RefreshReg$(_c, \"Student\");","map":{"version":3,"sources":["E:/project/frontend/src/Pages/Student.jsx"],"names":["React","useState","useEffect","GraphQLFetch","Student","props","myInfo","setMyInfo","name","reg_no","school","code","fetchMyInfo","res","console","log","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,yBAAzB;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACtB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC;AACnCO,IAAAA,IAAI,EAAE,EAD6B;AAEnCC,IAAAA,MAAM,EAAEJ,KAAK,CAACI,MAFqB;AAGnCC,IAAAA,MAAM,EAAE;AAAEF,MAAAA,IAAI,EAAE,EAAR;AAAYG,MAAAA,IAAI,EAAE;AAAlB;AAH2B,GAAD,CAApC;AAMAT,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,iBAAeA,WAAf,GAA6B;AAC3B,QAAIC,GAAG,GAAG,MAAMV,YAAY,CAAE;AAClC,4BAA4BE,KAAK,CAACI,MAAO;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UATgC,CAA5B;AAUAK,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASV,MAArB,EAX2B,CAY3B;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBAA4BA,MAAM,CAACI,MAAP,CAAcF;AAA1C;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAhCQJ,O;;KAAAA,O;AAkCT,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport GraphQLFetch from \"../Helpers/GraphQLFetch\"\r\n\r\nfunction Student(props) {\r\n  const [myInfo, setMyInfo] = useState({\r\n    name: \"\",\r\n    reg_no: props.reg_no,\r\n    school: { name: \"\", code: \"\" },\r\n  })\r\n\r\n  useEffect(() => {\r\n    fetchMyInfo()\r\n  }, [])\r\n\r\n  async function fetchMyInfo() {\r\n    let res = await GraphQLFetch(`{\r\n          myInfo(reg_no: \"${props.reg_no}\"){\r\n            name\r\n            reg_no\r\n            school{\r\n              name\r\n              code\r\n            }\r\n          }\r\n        }`)\r\n    console.log(res.data.myInfo)\r\n    // setMyInfo(res.data.myInfo)\r\n  }\r\n  return (\r\n    <div className=\"student\">\r\n      <div className=\"title\">Student's Page</div>\r\n      <div className=\"my-school\">{myInfo.school.name}</div>\r\n      <div className=\"my-candidates\"></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Student\r\n"]},"metadata":{},"sourceType":"module"}