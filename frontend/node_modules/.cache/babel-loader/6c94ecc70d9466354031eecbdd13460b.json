{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\frontend\\\\src\\\\Pages\\\\Students.jsx\",\n    _s = $RefreshSig$();\n\nimport { faSave, faSearch, faTimesCircle, faUserEdit, faUserPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useEffect, useState } from \"react\";\nimport Modal from \"../Components/Modal\";\nimport GraphQLFetch from \"../Helpers/GraphQLFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Students() {\n  _s();\n\n  const [{\n    errors,\n    data\n  }, setStudents] = useState([]);\n  const [schools, setSchools] = useState([]);\n  const [addStudent, setAddStudent] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [regno, setRegno] = useState(\"\");\n  const [school, setSchool] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  useEffect(() => {\n    fetchStudents();\n    fetchSchools();\n  }, []);\n\n  async function fetchStudents() {\n    let res = await GraphQLFetch(`{\n      students{\n        reg_no\n        name\n        school{\n          name\n          code\n        }\n      }\n    }`);\n    setStudents(res);\n  }\n\n  async function fetchSchools() {\n    let res = await GraphQLFetch(`{\n      schools{\n        code\n        name\n      }\n    }`);\n    setSchools(res.data.schools);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"students\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"Students\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), errors && errors.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 36\n    }, this)), data && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faSearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Find a Student\",\n            onInput: e => setSearch(e.target.value.toLowerCase())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          onClick: e => setAddStudent(true),\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faUserPlus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), \"Add\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Registration Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"School\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), data.students.map(_ref => {\n          let {\n            name,\n            reg_no,\n            school\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: reg_no\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [school.name, \" (\", school.code.toUpperCase(), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                display: \"flex\",\n                flexDirection: \"row\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"button small\",\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faUserEdit\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 21\n                }, this), \"Edit\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"button small\",\n                onClick: e => {\n                  window.confirm(\"Are you sure?\");\n                },\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faTimesCircle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 21\n                }, this), \"Delete\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Add Student\",\n      shown: addStudent,\n      hideMe: () => setAddStudent(false),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: \"Registration Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setRegno(e.target.value),\n          style: {\n            width: 300\n          },\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setName(e.target.value),\n          style: {\n            width: 300\n          },\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: \"School\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setSchool(e.target.value),\n          name: \"\",\n          id: \"\",\n          children: schools.map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n            style: {\n              textTransform: \"capitalize\"\n            },\n            value: s.code,\n            children: s.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button black\",\n          onClick: async () => {\n            let {\n              errors,\n              data\n            } = await GraphQLFetch(`mutation{\n                addStudent(reg_no: \"${regno}\", name: \"${name}\", school: \"${school}\"){\n                  name\n                  reg_no\n                  school{\n                    name\n                    code\n                  }\n                }\n              }`);\n            fetchStudents();\n\n            if (errors) {\n              alert(\"Failed to add student\\n\\n\" + errors.map(e => e.message));\n            } else {\n              alert(`Student Added`);\n              setAddStudent(false);\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faSave\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), \"\\xA0 Save\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Students, \"Gyi6XqYwohN97NBoMmEnJihTx5M=\");\n\n_c = Students;\nexport default Students;\n\nvar _c;\n\n$RefreshReg$(_c, \"Students\");","map":{"version":3,"sources":["E:/project/frontend/src/Pages/Students.jsx"],"names":["faSave","faSearch","faTimesCircle","faUserEdit","faUserPlus","FontAwesomeIcon","React","useEffect","useState","Modal","GraphQLFetch","Students","errors","data","setStudents","schools","setSchools","addStudent","setAddStudent","name","setName","regno","setRegno","school","setSchool","search","setSearch","fetchStudents","fetchSchools","res","map","e","target","value","toLowerCase","students","reg_no","code","toUpperCase","display","flexDirection","window","confirm","width","s","textTransform","alert","message"],"mappings":"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","sourcesContent":["import {\r\n  faSave,\r\n  faSearch,\r\n  faTimesCircle,\r\n  faUserEdit,\r\n  faUserPlus,\r\n} from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useEffect, useState } from \"react\"\r\nimport Modal from \"../Components/Modal\"\r\nimport GraphQLFetch from \"../Helpers/GraphQLFetch\"\r\n\r\nfunction Students() {\r\n  const [{ errors, data }, setStudents] = useState([])\r\n  const [schools, setSchools] = useState([])\r\n  const [addStudent, setAddStudent] = useState(false)\r\n  const [name, setName] = useState(\"\")\r\n  const [regno, setRegno] = useState(\"\")\r\n  const [school, setSchool] = useState(\"\")\r\n  const [search, setSearch] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    fetchStudents()\r\n    fetchSchools()\r\n  }, [])\r\n\r\n  async function fetchStudents() {\r\n    let res = await GraphQLFetch(`{\r\n      students{\r\n        reg_no\r\n        name\r\n        school{\r\n          name\r\n          code\r\n        }\r\n      }\r\n    }`)\r\n    setStudents(res)\r\n  }\r\n\r\n  async function fetchSchools() {\r\n    let res = await GraphQLFetch(`{\r\n      schools{\r\n        code\r\n        name\r\n      }\r\n    }`)\r\n    setSchools(res.data.schools)\r\n  }\r\n\r\n  return (\r\n    <div className=\"students\">\r\n      <div className=\"title\">Students</div>\r\n      {errors && errors.map((e) => <div>Error</div>)}\r\n      {data && (\r\n        <div className=\"list\">\r\n          <div className=\"options\">\r\n            <div className=\"search\">\r\n              <FontAwesomeIcon icon={faSearch} />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Find a Student\"\r\n                onInput={(e) => setSearch(e.target.value.toLowerCase())}\r\n              />\r\n            </div>\r\n            <div className=\"button\" onClick={(e) => setAddStudent(true)}>\r\n              <FontAwesomeIcon icon={faUserPlus} />\r\n              Add\r\n            </div>\r\n          </div>\r\n          <table>\r\n            <tr>\r\n              <th>Registration Number</th>\r\n              <th>Name</th>\r\n              <th>School</th>\r\n              <th></th>\r\n            </tr>\r\n            {data.students.map(({ name, reg_no, school }) => (\r\n              <tr>\r\n                <td>{reg_no}</td>\r\n                <td>{name}</td>\r\n                <td>\r\n                  {school.name} ({school.code.toUpperCase()})\r\n                </td>\r\n                <td style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                  <div className=\"button small\">\r\n                    <FontAwesomeIcon icon={faUserEdit} />\r\n                    Edit\r\n                  </div>\r\n                  <div\r\n                    className=\"button small\"\r\n                    onClick={(e) => {\r\n                      window.confirm(\"Are you sure?\")\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon icon={faTimesCircle} />\r\n                    Delete\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </table>\r\n        </div>\r\n      )}\r\n      <Modal\r\n        title=\"Add Student\"\r\n        shown={addStudent}\r\n        hideMe={() => setAddStudent(false)}\r\n      >\r\n        <div className=\"input\">\r\n          <label htmlFor=\"\">Registration Number</label>\r\n          <input\r\n            onChange={(e) => setRegno(e.target.value)}\r\n            style={{ width: 300 }}\r\n            type=\"text\"\r\n          />\r\n        </div>\r\n        <div className=\"input\">\r\n          <label htmlFor=\"\">Name</label>\r\n          <input\r\n            onChange={(e) => setName(e.target.value)}\r\n            style={{ width: 300 }}\r\n            type=\"text\"\r\n          />\r\n        </div>\r\n        <div className=\"input\">\r\n          <label htmlFor=\"\">School</label>\r\n          <select onChange={(e) => setSchool(e.target.value)} name=\"\" id=\"\">\r\n            {schools.map((s) => (\r\n              <option style={{ textTransform: \"capitalize\" }} value={s.code}>\r\n                {s.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"options\">\r\n          <div\r\n            className=\"button black\"\r\n            onClick={async () => {\r\n              let { errors, data } = await GraphQLFetch(`mutation{\r\n                addStudent(reg_no: \"${regno}\", name: \"${name}\", school: \"${school}\"){\r\n                  name\r\n                  reg_no\r\n                  school{\r\n                    name\r\n                    code\r\n                  }\r\n                }\r\n              }`)\r\n              fetchStudents()\r\n              if (errors) {\r\n                alert(\r\n                  \"Failed to add student\\n\\n\" + errors.map((e) => e.message)\r\n                )\r\n              } else {\r\n                alert(`Student Added`)\r\n                setAddStudent(false)\r\n              }\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faSave} />\r\n            &nbsp; Save\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Students\r\n"]},"metadata":{},"sourceType":"module"}