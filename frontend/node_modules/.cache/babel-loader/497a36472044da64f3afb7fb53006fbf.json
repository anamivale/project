{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\frontend\\\\src\\\\Admin.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport GraphQLFetch from \"./Helpers/GraphQLFetch\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Admin() {\n  _s();\n\n  const [candidates, setCandidates] = useState([]);\n  const [schools, setSchools] = useState([]);\n  const [students, setStudents] = useState([]);\n  useEffect(() => {\n    loadCandidates();\n    loadSchools();\n    loadStudents();\n  }, []);\n\n  async function loadCandidates() {\n    let {\n      data,\n      errors\n    } = await GraphQLFetch(`{\n      candidates{\n        name\n        reg_no\n      }\n    }`);\n\n    if (data) {\n      setCandidates(data.candidates);\n    }\n  }\n\n  async function loadSchools() {\n    let {\n      data,\n      errors\n    } = await GraphQLFetch(`{\n      schools{\n        name\n        code\n      }\n    }`);\n\n    if (data) {\n      setSchools(data.schools);\n    }\n  }\n\n  async function loadStudents() {\n    let {\n      data,\n      errors\n    } = await GraphQLFetch(`{\n      students{\n        name\n        reg_no\n      }\n    }`);\n\n    if (data) {\n      setStudents(data.students);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-dash\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dash-item\",\n        title: candidates.map(c => c.name),\n        children: [\"Candidates \", candidates.length, /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dash-item\",\n        title: students.map(s => `${s.name} (${s.reg_no})`),\n        children: [\"Students \", students.length.toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dash-item\",\n        title: schools.map(s => `${s.name} (${s.code})`),\n        children: [\"Schools \", schools.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Admin, \"PhjTwFOjl1/02UiIiPscST+r6Uw=\");\n\n_c = Admin;\nexport default Admin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"sources":["E:/project/frontend/src/Admin.jsx"],"names":["React","useState","useEffect","GraphQLFetch","FontAwesomeIcon","Admin","candidates","setCandidates","schools","setSchools","students","setStudents","loadCandidates","loadSchools","loadStudents","data","errors","map","c","name","length","s","reg_no","toLocaleString","code"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAASC,eAAT,QAAgC,gCAAhC;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,cAAc;AACdC,IAAAA,WAAW;AACXC,IAAAA,YAAY;AACb,GAJQ,EAIN,EAJM,CAAT;;AAMA,iBAAeF,cAAf,GAAgC;AAC9B,QAAI;AAAEG,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmB,MAAMb,YAAY,CAAE;AAC/C;AACA;AACA;AACA;AACA,MAL6C,CAAzC;;AAMA,QAAIY,IAAJ,EAAU;AACRR,MAAAA,aAAa,CAACQ,IAAI,CAACT,UAAN,CAAb;AACD;AACF;;AAED,iBAAeO,WAAf,GAA6B;AAC3B,QAAI;AAAEE,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmB,MAAMb,YAAY,CAAE;AAC/C;AACA;AACA;AACA;AACA,MAL6C,CAAzC;;AAMA,QAAIY,IAAJ,EAAU;AACRN,MAAAA,UAAU,CAACM,IAAI,CAACP,OAAN,CAAV;AACD;AACF;;AAED,iBAAeM,YAAf,GAA8B;AAC5B,QAAI;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmB,MAAMb,YAAY,CAAE;AAC/C;AACA;AACA;AACA;AACA,MAL6C,CAAzC;;AAMA,QAAIY,IAAJ,EAAU;AACRJ,MAAAA,WAAW,CAACI,IAAI,CAACL,QAAN,CAAX;AACD;AACF;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,KAAK,EAAEJ,UAAU,CAACW,GAAX,CAAgBC,CAAD,IAAOA,CAAC,CAACC,IAAxB,CAAlC;AAAA,kCACcb,UAAU,CAACc,MADzB,eAEE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AACE,QAAA,SAAS,EAAC,WADZ;AAEE,QAAA,KAAK,EAAEV,QAAQ,CAACO,GAAT,CAAcI,CAAD,IAAQ,GAAEA,CAAC,CAACF,IAAK,KAAIE,CAAC,CAACC,MAAO,GAA3C,CAFT;AAAA,gCAIYZ,QAAQ,CAACU,MAAT,CAAgBG,cAAhB,EAJZ;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAWE;AACE,QAAA,SAAS,EAAC,WADZ;AAEE,QAAA,KAAK,EAAEf,OAAO,CAACS,GAAR,CAAaI,CAAD,IAAQ,GAAEA,CAAC,CAACF,IAAK,KAAIE,CAAC,CAACG,IAAK,GAAxC,CAFT;AAAA,+BAIWhB,OAAO,CAACY,MAJnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GArEQf,K;;KAAAA,K;AAuET,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport GraphQLFetch from \"./Helpers/GraphQLFetch\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\n\r\nfunction Admin() {\r\n  const [candidates, setCandidates] = useState([])\r\n  const [schools, setSchools] = useState([])\r\n  const [students, setStudents] = useState([])\r\n\r\n  useEffect(() => {\r\n    loadCandidates()\r\n    loadSchools()\r\n    loadStudents()\r\n  }, [])\r\n\r\n  async function loadCandidates() {\r\n    let { data, errors } = await GraphQLFetch(`{\r\n      candidates{\r\n        name\r\n        reg_no\r\n      }\r\n    }`)\r\n    if (data) {\r\n      setCandidates(data.candidates)\r\n    }\r\n  }\r\n\r\n  async function loadSchools() {\r\n    let { data, errors } = await GraphQLFetch(`{\r\n      schools{\r\n        name\r\n        code\r\n      }\r\n    }`)\r\n    if (data) {\r\n      setSchools(data.schools)\r\n    }\r\n  }\r\n\r\n  async function loadStudents() {\r\n    let { data, errors } = await GraphQLFetch(`{\r\n      students{\r\n        name\r\n        reg_no\r\n      }\r\n    }`)\r\n    if (data) {\r\n      setStudents(data.students)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"admin\">\r\n      <div className=\"top-dash\">\r\n        <div className=\"dash-item\" title={candidates.map((c) => c.name)}>\r\n          Candidates {candidates.length}\r\n          <FontAwesomeIcon />\r\n        </div>\r\n        <div\r\n          className=\"dash-item\"\r\n          title={students.map((s) => `${s.name} (${s.reg_no})`)}\r\n        >\r\n          Students {students.length.toLocaleString()}\r\n        </div>\r\n        <div\r\n          className=\"dash-item\"\r\n          title={schools.map((s) => `${s.name} (${s.code})`)}\r\n        >\r\n          Schools {schools.length}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Admin\r\n"]},"metadata":{},"sourceType":"module"}