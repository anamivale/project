{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\frontend\\\\src\\\\Pages\\\\Students.jsx\",\n    _s = $RefreshSig$();\n\nimport { faTimesCircle, faUserEdit, faUserPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useEffect, useState } from \"react\";\nimport Modal from \"../Components/Modal\";\nimport GraphQLFetch from \"../Helpers/GraphQLFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Students() {\n  _s();\n\n  const [{\n    errors,\n    data\n  }, setStudents] = useState([]);\n  const [addStudent, setAddStudent] = useState(false);\n  useEffect(() => {\n    fetchStudents();\n  }, []);\n\n  async function fetchStudents() {\n    let res = await GraphQLFetch(`{\n      students{\n        reg_no\n        name\n        school{\n          name\n          code\n        }\n      }\n    }`);\n    setStudents(res);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"students\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"Students\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), errors && errors.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 36\n    }, this)), data && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faUserPlus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), \"Add\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Registration Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"School\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), data.students.map(_ref => {\n          let {\n            name,\n            reg_no,\n            school\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: reg_no\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [school.name, \" (\", school.code.toUpperCase(), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                display: \"flex\",\n                flexDirection: \"row\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"button small\",\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faUserEdit\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 21\n                }, this), \"Edit\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"button small\",\n                onClick: e => {\n                  window.confirm(\"Are you sure?\");\n                },\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faTimesCircle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 21\n                }, this), \"Delete\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Add Student\",\n      shown: addStudent,\n      children: \"Student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Students, \"WpzsLRqNfGIe8WUx/A2HZUtaXT8=\");\n\n_c = Students;\nexport default Students;\n\nvar _c;\n\n$RefreshReg$(_c, \"Students\");","map":{"version":3,"sources":["E:/project/frontend/src/Pages/Students.jsx"],"names":["faTimesCircle","faUserEdit","faUserPlus","FontAwesomeIcon","React","useEffect","useState","Modal","GraphQLFetch","Students","errors","data","setStudents","addStudent","setAddStudent","fetchStudents","res","map","e","students","name","reg_no","school","code","toUpperCase","display","flexDirection","window","confirm"],"mappings":";;;AAAA,SACEA,aADF,EAEEC,UAFF,EAGEC,UAHF,QAIO,mCAJP;AAKA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAAC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAD,EAAmBC,WAAnB,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;;AAIA,iBAAeA,aAAf,GAA+B;AAC7B,QAAIC,GAAG,GAAG,MAAMR,YAAY,CAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MATgC,CAA5B;AAUAI,IAAAA,WAAW,CAACI,GAAD,CAAX;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGN,MAAM,IAAIA,MAAM,CAACO,GAAP,CAAYC,CAAD,iBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAlB,CAFb,EAGGP,IAAI,iBACH;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,kCACE,QAAC,eAAD;AAAiB,YAAA,IAAI,EAAET;AAAvB;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAA,gCACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAOGS,IAAI,CAACQ,QAAL,CAAcF,GAAd,CAAkB;AAAA,cAAC;AAAEG,YAAAA,IAAF;AAAQC,YAAAA,MAAR;AAAgBC,YAAAA;AAAhB,WAAD;AAAA,8BACjB;AAAA,oCACE;AAAA,wBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA,yBACGE,MAAM,CAACF,IADV,QACkBE,MAAM,CAACC,IAAP,CAAYC,WAAZ,EADlB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAME;AAAI,cAAA,KAAK,EAAE;AAAEC,gBAAAA,OAAO,EAAE,MAAX;AAAmBC,gBAAAA,aAAa,EAAE;AAAlC,eAAX;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,cAAf;AAAA,wCACE,QAAC,eAAD;AAAiB,kBAAA,IAAI,EAAEzB;AAAvB;AAAA;AAAA;AAAA;AAAA,wBADF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAKE;AACE,gBAAA,SAAS,EAAC,cADZ;AAEE,gBAAA,OAAO,EAAGiB,CAAD,IAAO;AACdS,kBAAAA,MAAM,CAACC,OAAP,CAAe,eAAf;AACD,iBAJH;AAAA,wCAME,QAAC,eAAD;AAAiB,kBAAA,IAAI,EAAE5B;AAAvB;AAAA;AAAA;AAAA;AAAA,wBANF;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADiB;AAAA,SAAlB,CAPH;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eA6CE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAC,aAAb;AAA2B,MAAA,KAAK,EAAEa,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA7CF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmDD;;GAxEQJ,Q;;KAAAA,Q;AA0ET,eAAeA,QAAf","sourcesContent":["import {\r\n  faTimesCircle,\r\n  faUserEdit,\r\n  faUserPlus,\r\n} from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useEffect, useState } from \"react\"\r\nimport Modal from \"../Components/Modal\"\r\nimport GraphQLFetch from \"../Helpers/GraphQLFetch\"\r\n\r\nfunction Students() {\r\n  const [{ errors, data }, setStudents] = useState([])\r\n  const [addStudent, setAddStudent] = useState(false)\r\n\r\n  useEffect(() => {\r\n    fetchStudents()\r\n  }, [])\r\n\r\n  async function fetchStudents() {\r\n    let res = await GraphQLFetch(`{\r\n      students{\r\n        reg_no\r\n        name\r\n        school{\r\n          name\r\n          code\r\n        }\r\n      }\r\n    }`)\r\n    setStudents(res)\r\n  }\r\n  return (\r\n    <div className=\"students\">\r\n      <div className=\"title\">Students</div>\r\n      {errors && errors.map((e) => <div>Error</div>)}\r\n      {data && (\r\n        <div className=\"list\">\r\n          <div className=\"options\">\r\n            <div className=\"button\">\r\n              <FontAwesomeIcon icon={faUserPlus} />\r\n              Add\r\n            </div>\r\n          </div>\r\n          <table>\r\n            <tr>\r\n              <th>Registration Number</th>\r\n              <th>Name</th>\r\n              <th>School</th>\r\n              <th></th>\r\n            </tr>\r\n            {data.students.map(({ name, reg_no, school }) => (\r\n              <tr>\r\n                <td>{reg_no}</td>\r\n                <td>{name}</td>\r\n                <td>\r\n                  {school.name} ({school.code.toUpperCase()})\r\n                </td>\r\n                <td style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                  <div className=\"button small\">\r\n                    <FontAwesomeIcon icon={faUserEdit} />\r\n                    Edit\r\n                  </div>\r\n                  <div\r\n                    className=\"button small\"\r\n                    onClick={(e) => {\r\n                      window.confirm(\"Are you sure?\")\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon icon={faTimesCircle} />\r\n                    Delete\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </table>\r\n        </div>\r\n      )}\r\n      <Modal title=\"Add Student\" shown={addStudent}>\r\n        Student\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Students\r\n"]},"metadata":{},"sourceType":"module"}