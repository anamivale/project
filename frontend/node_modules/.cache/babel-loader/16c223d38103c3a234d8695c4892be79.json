{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\frontend\\\\src\\\\Pages\\\\Students.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport GraphQLFetch from \"../Helpers/GraphQLFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Students() {\n  _s();\n\n  const [{\n    errors,\n    data\n  }, setStudents] = useState([]);\n  useEffect(() => {\n    fetchStudents();\n  }, []);\n\n  async function fetchStudents() {\n    let res = await GraphQLFetch(`{\n      students{\n        reg_no\n        name\n        school{\n          name\n          code\n        }\n      }\n    }`);\n    setStudents(res.errors ? res.errors[0].message : res.data.students);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"students\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"Students\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: students.map(s => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Students, \"3rwtXQjUaofcZFa4D6rNPuRDuwc=\");\n\n_c = Students;\nexport default Students;\n\nvar _c;\n\n$RefreshReg$(_c, \"Students\");","map":{"version":3,"sources":["E:/project/frontend/src/Pages/Students.jsx"],"names":["React","useEffect","useState","GraphQLFetch","Students","errors","data","setStudents","fetchStudents","res","message","students","map","s"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,yBAAzB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAAC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAD,EAAmBC,WAAnB,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;;AAIA,iBAAeA,aAAf,GAA+B;AAC7B,QAAIC,GAAG,GAAG,MAAMN,YAAY,CAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MATgC,CAA5B;AAUAI,IAAAA,WAAW,CAACE,GAAG,CAACJ,MAAJ,GAAaI,GAAG,CAACJ,MAAJ,CAAW,CAAX,EAAcK,OAA3B,GAAqCD,GAAG,CAACH,IAAJ,CAASK,QAA/C,CAAX;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGA,QAAQ,CAACC,GAAT,CAAcC,CAAD,iBACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA9BQT,Q;;KAAAA,Q;AAgCT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport GraphQLFetch from \"../Helpers/GraphQLFetch\"\r\n\r\nfunction Students() {\r\n  const [{ errors, data }, setStudents] = useState([])\r\n\r\n  useEffect(() => {\r\n    fetchStudents()\r\n  }, [])\r\n\r\n  async function fetchStudents() {\r\n    let res = await GraphQLFetch(`{\r\n      students{\r\n        reg_no\r\n        name\r\n        school{\r\n          name\r\n          code\r\n        }\r\n      }\r\n    }`)\r\n    setStudents(res.errors ? res.errors[0].message : res.data.students)\r\n  }\r\n  return (\r\n    <div className=\"students\">\r\n      <div className=\"title\">Students</div>\r\n      <ul>\r\n        {students.map((s) => (\r\n          <li>Student</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Students\r\n"]},"metadata":{},"sourceType":"module"}