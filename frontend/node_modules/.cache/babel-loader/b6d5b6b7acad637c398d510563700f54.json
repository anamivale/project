{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\frontend\\\\src\\\\Pages\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAt, faLock, faAngleRight, faExclamationCircle, faGraduationCap, faUserAlt, faCircleNotch } from \"@fortawesome/free-solid-svg-icons\";\nimport { motion } from \"framer-motion\";\nimport { gql, useApolloClient } from \"@apollo/client\";\nimport GraphQLFetch from \"../Helpers/GraphQLFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(_ref) {\n  _s();\n\n  let {\n    reloadAuth\n  } = _ref;\n  const [loginAs, setLoginAs] = useState(0); // 0 student 1 admin\n\n  const [adminEmail, setAdminEmail] = useState(\"\");\n  const [adminPassword, setAdminPassword] = useState(\"\");\n  const [stdEmail, setStdEmail] = useState(\"\");\n  const [stdPassword, setStdPassword] = useState(\"\");\n  const [adminError, setAdminError] = useState(null);\n  const LOGIN_STD = gql`\n  {\n    studentLogin(reg_no: \"${stdEmail}\", password:\"${stdPassword}\"){\n    student{\n      name\n      reg_no\n      school{\n        name\n        code\n      }\n    }\n    token\n  }\n  }\n  `;\n  const client = useApolloClient();\n  const [std, setStd] = useState({\n    error: \"\",\n    data: {},\n    loading: false\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [loginAs ? /*#__PURE__*/_jsxDEV(motion.form, {\n      layout: true,\n      initial: {\n        opacity: 0,\n        y: 10\n      },\n      animate: {\n        opacity: 1,\n        y: 0\n      } //   transition={{ duration: 2 }}\n      ,\n      onSubmit: async e => {\n        e.preventDefault();\n        setAdminError(null);\n        let {\n          data,\n          errors\n        } = await GraphQLFetch(`\n            {\n              login(email: \"${adminEmail}\", password: \"${adminPassword}\"){\n                name\n                password\n                email\n                token\n              }\n            }`);\n        console.log(data, errors);\n\n        if (errors) {\n          setAdminError(errors[0].message);\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Admin Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), adminError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faExclamationCircle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: adminError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faAt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setAdminEmail(e.target.value),\n          value: adminEmail,\n          type: \"email\",\n          placeholder: \"Email Address\",\n          name: \"\",\n          id: \"\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faLock\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setAdminPassword(e.target.value),\n          value: adminPassword,\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"\",\n          id: \"\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"def-btn\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faAngleRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, \"adminlogin\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, \"admin\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : std.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCircleNotch,\n        className: \"rotating\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), \" Please Wait...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(motion.form, {\n      layout: true,\n      initial: {\n        opacity: 0,\n        y: 10\n      },\n      animate: {\n        opacity: 1,\n        y: 0\n      } //   transition={{ duration: 1 }}\n      ,\n      onSubmit: async e => {\n        setStd(s => ({ ...s,\n          loading: true\n        }));\n        e.preventDefault();\n\n        try {\n          const austd = await client.query({\n            query: LOGIN_STD // variables: { reg_no: stdEmail,  },\n\n          });\n          setStd(austd.data.studentLogin);\n          reloadAuth();\n          localStorage.setItem(\"school-token\", austd.data.studentLogin.token);\n        } catch (er) {\n          setStd({\n            error: er\n          });\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Student Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), std.error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faExclamationCircle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: std.error.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faGraduationCap\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setStdEmail(e.target.value),\n          value: stdEmail,\n          type: \"text\",\n          placeholder: \"Registration Number\",\n          name: \"\",\n          id: \"\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faLock\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setStdPassword(e.target.value),\n          value: stdPassword,\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"\",\n          id: \"\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"def-btn\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faAngleRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)]\n      }, \"stdlogin\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this)]\n    }, \"student\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toggle-login-as\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option sel\",\n        onClick: e => {\n          let bts = document.querySelectorAll(\".toggle-login-as .option\");\n\n          for (let b of bts) b.classList.remove(\"sel\");\n\n          e.target.classList.add(\"sel\");\n          setAdminEmail(\"\");\n          setAdminPassword(\"\");\n          setStdEmail(\"\");\n          setStdPassword(\"\");\n          setLoginAs(0);\n        },\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          style: {\n            pointerEvents: \"none\"\n          },\n          icon: faGraduationCap\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            pointerEvents: \"none\"\n          },\n          children: \"Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option\",\n        onClick: e => {\n          let bts = document.querySelectorAll(\".toggle-login-as .option\");\n\n          for (let b of bts) b.classList.remove(\"sel\");\n\n          e.target.classList.add(\"sel\");\n          setAdminEmail(\"\");\n          setAdminPassword(\"\");\n          setStdEmail(\"\");\n          setStdPassword(\"\");\n          setLoginAs(1);\n        },\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          style: {\n            pointerEvents: \"none\"\n          },\n          icon: faUserAlt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            pointerEvents: \"none\"\n          },\n          children: \"Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"J3KPk7CZCcI+Bzttm4EGqmvRqjk=\", false, function () {\n  return [useApolloClient];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["E:/project/frontend/src/Pages/Login.jsx"],"names":["React","useState","FontAwesomeIcon","faAt","faLock","faAngleRight","faExclamationCircle","faGraduationCap","faUserAlt","faCircleNotch","motion","gql","useApolloClient","GraphQLFetch","Login","reloadAuth","loginAs","setLoginAs","adminEmail","setAdminEmail","adminPassword","setAdminPassword","stdEmail","setStdEmail","stdPassword","setStdPassword","adminError","setAdminError","LOGIN_STD","client","std","setStd","error","data","loading","opacity","y","e","preventDefault","errors","console","log","message","target","value","padding","s","austd","query","studentLogin","localStorage","setItem","token","er","bts","document","querySelectorAll","b","classList","remove","add","pointerEvents"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n  faAt,\n  faLock,\n  faAngleRight,\n  faExclamationCircle,\n  faGraduationCap,\n  faUserAlt,\n  faCircleNotch,\n} from \"@fortawesome/free-solid-svg-icons\"\nimport { motion } from \"framer-motion\"\nimport { gql, useApolloClient } from \"@apollo/client\"\nimport GraphQLFetch from \"../Helpers/GraphQLFetch\"\n\nfunction Login({ reloadAuth }) {\n  const [loginAs, setLoginAs] = useState(0) // 0 student 1 admin\n  const [adminEmail, setAdminEmail] = useState(\"\")\n  const [adminPassword, setAdminPassword] = useState(\"\")\n  const [stdEmail, setStdEmail] = useState(\"\")\n  const [stdPassword, setStdPassword] = useState(\"\")\n  const [adminError, setAdminError] = useState(null)\n\n  const LOGIN_STD = gql`\n  {\n    studentLogin(reg_no: \"${stdEmail}\", password:\"${stdPassword}\"){\n    student{\n      name\n      reg_no\n      school{\n        name\n        code\n      }\n    }\n    token\n  }\n  }\n  `\n\n  const client = useApolloClient()\n\n  const [std, setStd] = useState({ error: \"\", data: {}, loading: false })\n\n  return (\n    <div className=\"login\">\n      {loginAs ? (\n        <motion.form\n          key=\"admin\"\n          layout\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          //   transition={{ duration: 2 }}\n          onSubmit={async (e) => {\n            e.preventDefault()\n            setAdminError(null)\n            let { data, errors } = await GraphQLFetch(`\n            {\n              login(email: \"${adminEmail}\", password: \"${adminPassword}\"){\n                name\n                password\n                email\n                token\n              }\n            }`)\n            console.log(data, errors)\n            if (errors) {\n              setAdminError(errors[0].message)\n            }\n          }}\n        >\n          <div className=\"title\">Admin Login</div>\n          {adminError && (\n            <div className=\"message\">\n              <FontAwesomeIcon icon={faExclamationCircle} />\n              <span>{adminError}</span>\n            </div>\n          )}\n          <div className=\"input\">\n            <label htmlFor=\"email\">\n              <FontAwesomeIcon icon={faAt} />\n            </label>\n            <input\n              onChange={(e) => setAdminEmail(e.target.value)}\n              value={adminEmail}\n              type=\"email\"\n              placeholder=\"Email Address\"\n              name=\"\"\n              id=\"\"\n              required\n            />\n          </div>\n          <div className=\"input\">\n            <label htmlFor=\"email\">\n              <FontAwesomeIcon icon={faLock} />\n            </label>\n            <input\n              onChange={(e) => setAdminPassword(e.target.value)}\n              value={adminPassword}\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"\"\n              id=\"\"\n              required\n            />\n          </div>\n          <button className=\"def-btn\" key=\"adminlogin\">\n            <span>Log In</span>\n            <FontAwesomeIcon icon={faAngleRight} />\n          </button>\n        </motion.form>\n      ) : std.loading ? (\n        <div style={{ padding: 20 }}>\n          <FontAwesomeIcon icon={faCircleNotch} className=\"rotating\" /> Please\n          Wait...\n        </div>\n      ) : (\n        <motion.form\n          key=\"student\"\n          layout\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          //   transition={{ duration: 1 }}\n          onSubmit={async (e) => {\n            setStd((s) => ({ ...s, loading: true }))\n            e.preventDefault()\n            try {\n              const austd = await client.query({\n                query: LOGIN_STD,\n                // variables: { reg_no: stdEmail,  },\n              })\n              setStd(austd.data.studentLogin)\n              reloadAuth()\n              localStorage.setItem(\n                \"school-token\",\n                austd.data.studentLogin.token\n              )\n            } catch (er) {\n              setStd({ error: er })\n            }\n          }}\n        >\n          <div className=\"title\">Student Login</div>\n          {std.error && (\n            <div className=\"message\">\n              <FontAwesomeIcon icon={faExclamationCircle} />\n              <span>{std.error.message}</span>\n            </div>\n          )}\n          <div className=\"input\">\n            <label htmlFor=\"email\">\n              <FontAwesomeIcon icon={faGraduationCap} />\n            </label>\n            <input\n              onChange={(e) => setStdEmail(e.target.value)}\n              value={stdEmail}\n              type=\"text\"\n              placeholder=\"Registration Number\"\n              name=\"\"\n              id=\"\"\n              required\n            />\n          </div>\n          <div className=\"input\">\n            <label htmlFor=\"email\">\n              <FontAwesomeIcon icon={faLock} />\n            </label>\n            <input\n              onChange={(e) => setStdPassword(e.target.value)}\n              value={stdPassword}\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"\"\n              id=\"\"\n              required\n            />\n          </div>\n          <button className=\"def-btn\" key=\"stdlogin\">\n            <span>Log In</span>\n            <FontAwesomeIcon icon={faAngleRight} />\n          </button>\n        </motion.form>\n      )}\n      <div className=\"toggle-login-as\">\n        <div\n          className=\"option sel\"\n          onClick={(e) => {\n            let bts = document.querySelectorAll(\".toggle-login-as .option\")\n            for (let b of bts) b.classList.remove(\"sel\")\n            e.target.classList.add(\"sel\")\n            setAdminEmail(\"\")\n            setAdminPassword(\"\")\n            setStdEmail(\"\")\n            setStdPassword(\"\")\n            setLoginAs(0)\n          }}\n        >\n          <FontAwesomeIcon\n            style={{ pointerEvents: \"none\" }}\n            icon={faGraduationCap}\n          />\n          <span style={{ pointerEvents: \"none\" }}>Student</span>\n        </div>\n        <div\n          className=\"option\"\n          onClick={(e) => {\n            let bts = document.querySelectorAll(\".toggle-login-as .option\")\n            for (let b of bts) b.classList.remove(\"sel\")\n            e.target.classList.add(\"sel\")\n            setAdminEmail(\"\")\n            setAdminPassword(\"\")\n            setStdEmail(\"\")\n            setStdPassword(\"\")\n            setLoginAs(1)\n          }}\n        >\n          <FontAwesomeIcon style={{ pointerEvents: \"none\" }} icon={faUserAlt} />\n          <span style={{ pointerEvents: \"none\" }}>Admin</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}